# Docker Compose for LOCAL DEVELOPMENT
# This file is for starting only PostgreSQL and developing the API locally
version: "3.8"

services:
  # PostgreSQL for development
  postgres:
    image: postgres:15-alpine
    container_name: booking-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: booking_user
      POSTGRES_PASSWORD: booking_password
      POSTGRES_DB: booking_development
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      # Persist data between restarts
      - postgres_dev_data:/var/lib/postgresql/data
      # Optional initialization script (comentado si no existe)
      # - ./docker/postgres/init-dev.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U booking_user -d booking_development"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    # Configurations optimized for development
    command: >
      postgres
      -c log_statement=all
      -c log_destination=stderr
      -c log_min_messages=info
      -c log_min_duration_statement=0
      -c shared_preload_libraries=pg_stat_statements
    networks:
      - booking-dev-network

  # Adminer for BD administration (web interface)
  adminer:
    image: adminer:4.8.1-standalone
    container_name: booking-adminer-dev
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha-dark
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - booking-dev-network
    profiles:
      - admin # Only starts with: docker-compose --profile admin up

  # Redis for cache (optional - for future features)
  redis:
    image: redis:7-alpine
    container_name: booking-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes --requirepass dev-redis-password
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - booking-dev-network
    profiles:
      - cache # Only starts with: docker-compose --profile cache up

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  booking-dev-network:
    driver: bridge
    name: booking-dev-network
# Extension configuration for development
# To load with: docker-compose -f docker-compose.dev.yml --profile admin --profile cache up -d
